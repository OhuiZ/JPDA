function get_JPDA_betas_fullmarginal()

Nm=length(ymset);
T=[];
II=eye(Nm);
II=[II;zeros(1,Nm)];
for i=1:No
    T=tense_prod_index(T,II);
end
remind=[];
for r=1:size(T,1)
    a=zeros(1,Nm);
    for i=1:No
        a=a+T(r,(i-1)*Nm+1:i*Nm);
    end
    
    if any(a>=2)
        remind=horzcat(remind,r);
    end
end

T(remind,:)=[];

A=[];
for i=1:1:No
    A=cat(3,A,T(:,(i-1)*Nm+1:i*Nm));
end


TargetIndList=1:1:No;
Beta=zeros(Nm,No);
Beta_null=zeros(1,No); % probability in which no measurements are associated
V=JPDAprops.V;
PD=JPDAprops.PD;
Gamma=JPDAprops.Gamma;

% doing some pre computations
if strcmp(SIM.use,'quad')
    PZ=cell(1,No);
    MZ=cell(1,No);
    for i=1:No
        muprior=xf{k,i};
        Pprior=Pf{k,i};
        [x,w]=qd_pts(muprior,Pprior);
        z=zeros(length(w),hn);
        for q=1:length(w)
            z(q,:)=h(x(q,:)');
        end
        
        [mz,Pz]=MeanCov(z,w);
        Pz=Pz+R;
        MZ{i}=mz;
        PZ{i}=Pz;
    end
end







end